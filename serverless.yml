service: your-app
app: your-app

package:
  individually: true

custom:
  profiles:
    dev: your-app-dev
  storage:
    dev: dev
  serverless-offline:
    httpPort: 8080
    useChildProcesses: true
  webpack:
    webpackConfig: "./webpack.config.js"
    includeModules: true
  splitStacks:
    perFunction: true
    perType: false
    perGroupFunction: false
  apiGatewayCaching:
    enabled: false

provider:
  name: aws
  versionFunctions: false
  runtime: nodejs12.x
  memorySize: 512
  stage: ${opt:stage, 'dev'}
  profile: ${self:custom.profiles.${opt:stage, self:provider.stage, 'dev'}}
  lambdaHashingVersion: 20201221
  apiGateway:
    minimumCompressionSize: 1024
    shouldStartNameWithService: true
  environment:
    REGION: us-east-1
    STAGE: ${self:provider.stage, 'dev'}

functions:
  functionHelloWorld:
    handler: helloWorld.handler
    role: defaultRole
    events:
      - http:
          method: get
          path: hello-world


resources:
  Resources:
    GatewayResponseDefault4XX:
      Type: "AWS::ApiGateway::GatewayResponse"
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: "ApiGatewayRestApi"

    defaultRole:
      Type: AWS::IAM::Role
      Properties:
        Path: "/"
        RoleName: defaultRole-${self:provider.stage}
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: LambdaDefaultPolicy
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource: "*"

frameworkVersion: ">=1.83.2"
plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-plugin-split-stacks
  - serverless-api-gateway-caching
  - serverless-prune-plugin
